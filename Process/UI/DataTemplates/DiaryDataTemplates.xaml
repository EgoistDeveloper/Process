<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:converters="clr-namespace:Process.UI.Converters"
                    xmlns:pages="clr-namespace:Process.UI.Pages"
                    xmlns:control="clr-namespace:Process.UI.Controls.Common.Calendar">

    <converters:IntToColorConverter x:Key="IntToColorConverter" />
    <converters:LengthToFontSizeConverter x:Key="LengthToFontSizeConverter" />
    <converters:MultipleBindingFallbackConverter x:Key="MultipleBindingFallbackConverter" />

    <Style x:Key="ShowHistoryButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                              BorderThickness="{TemplateBinding BorderThickness}" 
                              Background="{TemplateBinding Background}" 
                              SnapsToDevicePixels="true"
                              CornerRadius="{Binding Path=DayButtonRadius}">
                        <Path x:Name="path" Stretch="Uniform" 
                              Fill="{StaticResource BlueGrey400Brush}"
                              Height="25" Width="25"
                              Data="{Binding Source={StaticResource EyeOutline}, Path=Data}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="path" Value="{StaticResource BlueGrey300Brush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Height" TargetName="path" Value="24"/>
                            <Setter Property="Width" TargetName="path" Value="24"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="HistoryLogDataTemplate">
        <Grid Height="35" Width="280">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{Binding AddedDate}" 
                       Foreground="{StaticResource BlueGrey400Brush}" TextAlignment="Center"
                       HorizontalAlignment="Center" VerticalAlignment="Center"
                       ToolTip="{Binding LogContent, Converter={StaticResource SubstringConverter}, ConverterParameter=100}"/>
            <Button Grid.Column="1" Height="30" Width="30" 
                    Style="{StaticResource ShowHistoryButtonStyle}"
                    Command="{Binding DataContext.ShowHistoryLogCommand, 
                              RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                    Tag="{Binding Id}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="DiaryLogFeelingRateDataTemplate">
        <Grid Width="150" Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{Binding Feeling}" TextAlignment="Center"
                       Foreground="{StaticResource SpruceBrush}"
                       HorizontalAlignment="Center"/>

            <ComboBox Grid.Column="1" SelectedItem="{Binding FeelingRate}" 
                      HorizontalContentAlignment="Center">
                <ComboBox.ItemsSource>
                    <x:Array Type="{x:Type system:Int32}">
                        <system:Int32>1</system:Int32>
                        <system:Int32>2</system:Int32>
                        <system:Int32>3</system:Int32>
                        <system:Int32>4</system:Int32>
                        <system:Int32>5</system:Int32>
                    </x:Array>
                </ComboBox.ItemsSource>
            </ComboBox>
        </Grid>
    </DataTemplate>

    <!-- #region Word Cloud Section -->
    
    <ContextMenu x:Key="WordCloudItemContextMenu">
        <MenuItem Header="Add To Black List"
                  Command="{Binding DataContext.Command, 
                            RelativeSource={RelativeSource Mode=FindAncestor, 
                            AncestorType={x:Type ContextMenu}}}" 
                  CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Mode=FindAncestor, 
                                     AncestorType={x:Type ContextMenu}}}">
            <MenuItem.Icon>
                <Path Height="14" Width="14" Stretch="UniformToFill"
                      Fill="{StaticResource BlueGrey300Brush}"
                      Data="{Binding Source={StaticResource Plus}, Path=Data}"/>
            </MenuItem.Icon>
        </MenuItem>
    </ContextMenu>

    <DataTemplate x:Key="WordCloudItemDataTemplate">
        <Grid Margin="10">
            <Border Background="{Binding Word.Length, Converter={StaticResource IntToColorConverter}}"
                    CornerRadius="{Binding Count, Converter={StaticResource LengthToFontSizeConverter}}"
                    Opacity=".2"
                    Padding="{Binding Word.Length, Converter={StaticResource LengthToFontSizeConverter}}"/>
            <Border BorderBrush="{Binding Word.Length, Converter={StaticResource IntToColorConverter}}"
                    BorderThickness="3"
                    CornerRadius="{Binding Count, Converter={StaticResource LengthToFontSizeConverter}}"
                    Margin="5" Opacity=".5"
                    Padding="{Binding Word.Length, Converter={StaticResource LengthToFontSizeConverter}}"/>
            <TextBlock Foreground="{Binding Word.Length, Converter={StaticResource IntToColorConverter}}"
                       FontSize="{Binding Count, Converter={StaticResource LengthToFontSizeConverter}}"
                       Margin="{Binding Word.Length, Converter={StaticResource LengthToFontSizeConverter}}"
                       ContextMenu="{StaticResource WordCloudItemContextMenu}"
                       HorizontalAlignment="Center" 
                       VerticalAlignment="Center">
                <!-- Shadow -->
                <TextBlock.Effect>
                    <DropShadowEffect BlurRadius="20" Color="#000" Opacity=".08" ShadowDepth="0" Direction="0"/>
                </TextBlock.Effect>
                <!-- Text -->
                <TextBlock.Text>
                    <MultiBinding StringFormat="{}{0} ({1})">
                        <Binding Path="Word"/>
                        <Binding Path="Count"/>
                    </MultiBinding>
                </TextBlock.Text>
                <!-- Tooltip -->
                <TextBlock.ToolTip>
                    <TextBlock Foreground="{Binding Word.Length, Converter={StaticResource IntToColorConverter}}"
                                   FontSize="{Binding Count, Converter={StaticResource LengthToFontSizeConverter}}"
                                   Margin="{Binding Word.Length, Converter={StaticResource LengthToFontSizeConverter}}">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0} ({1})">
                                <Binding Path="Word"/>
                                <Binding Path="Count"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </TextBlock.ToolTip>
        </TextBlock>
        </Grid>
    </DataTemplate>

    
    <ContextMenu x:Key="BlackWordItemContextMenu">
        <MenuItem Header="Remove From Black List"
                  Command="{Binding DataContext.Command, 
                            RelativeSource={RelativeSource Mode=FindAncestor, 
                            AncestorType={x:Type ContextMenu}}}" 
                  CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Mode=FindAncestor, 
                                     AncestorType={x:Type ContextMenu}}}">
            <MenuItem.Icon>
                <Path Height="3" Width="14" Stretch="UniformToFill"
                      Fill="{StaticResource BlueGrey300Brush}"
                      Data="{Binding Source={StaticResource Minus}, Path=Data}"/>
            </MenuItem.Icon>
        </MenuItem>

    </ContextMenu>

    <DataTemplate x:Key="BlackWordItemDataTemplate">
        <Grid Margin="10">
            <Border Background="{Binding Word.Length, Converter={StaticResource IntToColorConverter}}"
                    CornerRadius="{Binding Count, Converter={StaticResource LengthToFontSizeConverter}}"
                    Opacity=".2"
                    Padding="{Binding Word.Length, Converter={StaticResource LengthToFontSizeConverter}}"/>
            <Border BorderBrush="{Binding Word.Length, Converter={StaticResource IntToColorConverter}}"
                    BorderThickness="3"
                    CornerRadius="{Binding Count, Converter={StaticResource LengthToFontSizeConverter}}"
                    Margin="5" Opacity=".5"
                    Padding="{Binding Word.Length, Converter={StaticResource LengthToFontSizeConverter}}"/>
            <TextBlock Foreground="{Binding Word.Length, Converter={StaticResource IntToColorConverter}}"
                       FontSize="{Binding Count, Converter={StaticResource LengthToFontSizeConverter}}"
                       Margin="{Binding Word.Length, Converter={StaticResource LengthToFontSizeConverter}}"
                       ContextMenu="{StaticResource BlackWordItemContextMenu}"
                       Text="{Binding Word}"
                       HorizontalAlignment="Center" 
                       VerticalAlignment="Center">
                <!-- Shadow -->
                <TextBlock.Effect>
                    <DropShadowEffect BlurRadius="20" Color="#000" Opacity=".08" ShadowDepth="0" Direction="0"/>
                </TextBlock.Effect>
                <!-- Tooltip -->
                <TextBlock.ToolTip>
                    <TextBlock Foreground="{Binding Word.Length, Converter={StaticResource IntToColorConverter}}"
                                   FontSize="{Binding Count, Converter={StaticResource LengthToFontSizeConverter}}"
                                   Margin="{Binding Word.Length, Converter={StaticResource LengthToFontSizeConverter}}">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0} ({1})">
                                <Binding Path="Word"/>
                                <Binding Path="Count"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </TextBlock.ToolTip>
        </TextBlock>
        </Grid>
    </DataTemplate>
    
    <!-- #endregion -->

    <!-- Diary Day DataTemplate -->
    <DataTemplate x:Key="DiaryDayDataTemplate">
        <Button Content="{Binding Date.Day}" 
                IsEnabled="{Binding IsEnabled}"
                IsDefault="{Binding IsDefault}"
                Style="{Binding DayStatus, 
                        FallbackValue={StaticResource DayButtonBaseStyle},
                        Converter={StaticResource DayButonStyleConverter}}"
                Background="{Binding Path=DayItem.LogContentLength, 
                             FallbackValue={StaticResource BlueGrey900Brush}, 
                             Converter={StaticResource IntToColorConverter}}"
                Command="{Binding DataContext.CalendarButtonCommand, 
                          RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=2, AncestorType={x:Type Border}}}"
                CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
            <Button.ToolTip>
                <MultiBinding Converter="{StaticResource MultipleBindingFallbackConverter}">
                    <Binding Path="TooltipText" FallbackValue=""/>
                    <Binding Path="DayItem.DiaryLogRate.DayKeywords" StringFormat="Keywords: {0}}" 
                             Converter="{StaticResource SubstringConverter}" ConverterParameter="200"/>
                    <Binding Path="Date" StringFormat="{}{0:dd.MM.yyyy}}"/>
                </MultiBinding>
            </Button.ToolTip>
        </Button>
    </DataTemplate>

    <DataTemplate x:Key="DiaryCalendarDataTemplate">
        <control:Calendar x:Name="calendar"
                          DayDataTemplate="{DynamicResource DiaryDayDataTemplate}"
                          MonthNumber="{Binding MonthNumber}"
                          YearNumber="{Binding Year}"
                          CalendarButtonCommand="{Binding DataContext.CalendarButtonCommand, 
                                                  RelativeSource={RelativeSource AncestorType={x:Type pages:BasePage}}}"/>
    </DataTemplate>
</ResourceDictionary>