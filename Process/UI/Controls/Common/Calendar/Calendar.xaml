<UserControl x:Class="Process.UI.Controls.Common.Calendar.Calendar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Process.UI.Controls.Common.Calendar"
             xmlns:converters="clr-namespace:Process.UI.Converters"
             mc:Ignorable="d" x:Name="CalendarControl"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <!-- Converter -->
        <converters:DayButonStyleConverter x:Key="DayButonStyleConverter"/>
        <converters:ThisMonthUnderlineConverter x:Key="ThisMonthUnderlineConverter"/>
        <converters:IntToColorConverter x:Key="IntToColorConverter"/>
        <converters:SubstringConverter x:Key="SubstringConverter"/>
        <converters:MultipleBindingFallbackConverter x:Key="MultipleBindingFallbackConverter"/>

        <!-- WeekdaysStyle -->
        <Style x:Key="WeekdaysStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{StaticResource DarkGreyBrush}"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Margin" Value="2"/>
        </Style>
        
        <!-- #region Day Button Styles -->

        <!-- DayButton Base Style -->
        <Style x:Key="DayButtonBaseStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource DarkGreyBrush}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <!-- Content -->
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                              BorderThickness="{TemplateBinding BorderThickness}" 
                              Background="{StaticResource WhiteBrush}" 
                              SnapsToDevicePixels="true" 
                              CornerRadius="3">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                            Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>

                        <!-- Triggers -->
                        <ControlTemplate.Triggers>
                            <!-- IsDefault -->
                            <Trigger Property="IsDefault" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource DarkGreyBrush}"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                            </Trigger>
                            <!-- IsEnabled:true & IsMouseOver:true -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <!-- Border Background -->
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).Color" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0:0:0.2" Value="{StaticResource LightGrey}"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <!-- Border Background -->
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).Color" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0:0:0.2" Value="{StaticResource White}"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <!-- IsDefault:rtue & IsEnabled:true & IsMouseOver:true -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsDefault" Value="True"/>
                                    <Condition Property="IsEnabled" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="border" Value="0.9"/>
                                <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
                            </MultiTrigger>
                            <!-- IsEnabled -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource SoftBlueGreyBrush}"/>
                                <Setter Property="Opacity" TargetName="border" Value=".5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- LoggedDayButtonStyle -->
        <Style x:Key="LoggedDayButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource DayButtonBaseStyle}">
            <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{StaticResource SnowWhiteBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="true" CornerRadius="3">
                            <ContentPresenter x:Name="contentPresenter" 
                                            Focusable="False" 
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                            Margin="{TemplateBinding Padding}" 
                                            RecognizesAccessKey="True" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Opacity" TargetName="border" Value="0.9"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- LoggedTodayButtonStyle -->
        <Style x:Key="LoggedTodayButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource DayButtonBaseStyle}">
            <Setter Property="Foreground" Value="{StaticResource SnowWhiteBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" 
                              BorderBrush="{StaticResource DarkGreyBrush}" 
                              BorderThickness="2" 
                              Background="{TemplateBinding Background}" 
                              SnapsToDevicePixels="true" CornerRadius="3">
                            <ContentPresenter x:Name="contentPresenter" 
                                            Focusable="False" 
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                            Margin="{TemplateBinding Padding}" 
                                            RecognizesAccessKey="True" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Opacity" TargetName="border" Value="0.9"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- #endregion -->
    </UserControl.Resources>

    <UserControl.Template>
        <ControlTemplate TargetType="UserControl">
            <Border Background="{Binding BackgroundColor, FallbackValue={StaticResource WhiteBrush}}" 
                    CornerRadius="{Binding CornerRadius, FallbackValue=5}"
                    Margin="{Binding CalendarMargin, FallbackValue=10}"
                    Padding="{Binding CalendarPadding, FallbackValue=5}"
                    DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="20" Color="#000"
                                      ShadowDepth="0" Direction="0"
                                      Opacity="{Binding CalendarShadowOpacity, FallbackValue=0.02}"/>
                </Border.Effect>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- Month Name -->
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                               FontSize="12" FontWeight="DemiBold" 
                               Foreground="{StaticResource SpruceBrush}"
                               TextDecorations="{Binding Path=MonthNumber, Converter={StaticResource ThisMonthUnderlineConverter}, 
                                                 UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">

                        <TextBlock.Effect>
                            <DropShadowEffect BlurRadius="15" Color="#000" Opacity=".1" ShadowDepth="5" Direction="0"/>
                        </TextBlock.Effect>
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0} {1}">
                                <Binding Path="MonthName" FallbackValue="January"/>
                                <Binding Path="YearNumber" FallbackValue="2020" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>

                    <!-- Weekdays Bar -->
                    <WrapPanel Grid.Row="1" Width="245" Height="245"
                               HorizontalAlignment="Center" Orientation="Horizontal">
                        <TextBlock Text="Mo" Style="{StaticResource WeekdaysStyle}"/>
                        <TextBlock Text="Tu" Style="{StaticResource WeekdaysStyle}"/>
                        <TextBlock Text="We" Style="{StaticResource WeekdaysStyle}"/>
                        <TextBlock Text="Th" Style="{StaticResource WeekdaysStyle}"/>
                        <TextBlock Text="Fr" Style="{StaticResource WeekdaysStyle}"/>
                        <TextBlock Text="Sa" Style="{StaticResource WeekdaysStyle}"/>
                        <TextBlock Text="Su" Style="{StaticResource WeekdaysStyle}"/>
                    </WrapPanel>

                    <!-- Separator -->
                    <Border Grid.Row="2" BorderBrush="{StaticResource GreyBrush}" 
                            BorderThickness="0 1 0 0" Margin="15 5"/>

                    <!-- Days List -->
                    <ListView Grid.Row="2" 
                              Width="245" Margin="10"
                              ItemsSource="{Binding Days}" 
                              ItemTemplate="{Binding DayDataTemplate}">
                    </ListView>
                </Grid>
            </Border>
        </ControlTemplate>
    </UserControl.Template>
</UserControl>
