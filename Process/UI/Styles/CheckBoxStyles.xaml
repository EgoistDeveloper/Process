<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>

    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>

    <Style x:Key="ToDoIndexCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BlueGrey300Brush}"/>
        <Setter Property="Foreground" Value="{DynamicResource BlueGrey700Brush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="indexBoxBorder" 
                                Margin="{TemplateBinding Margin}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="2" 
                                Background="{TemplateBinding Background}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                CornerRadius="30" 
                                Height="20" Width="20">

                            <TextBlock Text="{TemplateBinding Tag}"
                                       Foreground="{TemplateBinding BorderBrush}"
                                       HorizontalAlignment="Center"/>
                        </Border>
                        <Border x:Name="checkBoxBorder" Grid.Column="1"
                                Margin="{TemplateBinding Margin}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"
                                CornerRadius="30">

                            <Path x:Name="optionMark" 
                                  Data="{Binding Source={StaticResource CheckCircleOutline}, Path=Data}" 
                                  Fill="{StaticResource LightGreyBrush}" 
                                  Margin="2"
                                  Stretch="Uniform"/>
                        </Border>
                        <TextBlock x:Name="contentPresenter" Grid.Column="2" 
                                   Text="{TemplateBinding Content}" 
                                   Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   Margin="{TemplateBinding Padding}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="Center"/>
                        <ContentPresenter Grid.Column="2" 
                                          ContentSource="{TemplateBinding Content}"
                                          Content="{TemplateBinding Content}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="10,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource DarkGreyBrush}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource DarkGreyBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource LightGreenBrush}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource LightGreenBrush}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource SnowWhiteBrush}"/>
                            <Setter Property="TextDecorations" TargetName="contentPresenter" Value="StrikeThrough"/>
                            <Setter Property="Foreground" TargetName="contentPresenter" Value="{StaticResource GreyBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToDoCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DarkGreyBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource DarkGreyBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" 
                                Margin="{TemplateBinding Margin}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"
                                CornerRadius="30">

                            <Path x:Name="optionMark" 
                                  Data="{Binding Source={StaticResource CheckCircleOutline}, Path=Data}" 
                                  Fill="{StaticResource LightGreyBrush}" 
                                  Margin="2"
                                  Stretch="Uniform"/>
                        </Border>
                        <TextBlock x:Name="contentPresenter" Grid.Column="1" 
                                   Text="{TemplateBinding Content}"
                                   Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   Margin="{TemplateBinding Padding}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="10,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource DarkGreyBrush}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource DarkGreyBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource LightGreenBrush}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource LightGreenBrush}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource SnowWhiteBrush}"/>
                            <Setter Property="TextDecorations" TargetName="contentPresenter" Value="StrikeThrough"/>
                            <Setter Property="Foreground" TargetName="contentPresenter" Value="{StaticResource GreyBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StarCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DarkGreyBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource DarkGreyBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid x:Name="checkBoxBorder" 
                                Margin="{TemplateBinding Margin}" 
                                Background="{TemplateBinding Background}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">

                            <Path x:Name="starPath" 
                                  Data="{Binding Source={StaticResource StarOutline}, Path=Data}" 
                                  Fill="{TemplateBinding Foreground}" 
                                  Stretch="Uniform"/>
                        </Grid>
                        <TextBlock x:Name="contentPresenter" Grid.Column="1" 
                                   Text="{TemplateBinding Content}"
                                   Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   Margin="{TemplateBinding Padding}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="10,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="starPath" Value="{StaticResource YellowBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Fill" TargetName="starPath" Value="{StaticResource LightYellowBrush}"/>
                            <Setter Property="Data" TargetName="starPath" Value="{Binding Source={StaticResource Star}, Path=Data}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Fill" TargetName="starPath" Value="{StaticResource YellowBrush}"/>
                            <Setter Property="Data" TargetName="starPath" Value="{Binding Source={StaticResource StarOff}, Path=Data}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CoffeeCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DarkGreyBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource DarkGreyBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="ToolTip" Value="Day Break"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid x:Name="checkBoxBorder" 
                                Margin="{TemplateBinding Margin}" 
                                Background="{TemplateBinding Background}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">

                            <Path x:Name="coffePath" 
                                  Data="{Binding Source={StaticResource CoffeeOutline}, Path=Data}" 
                                  Fill="{TemplateBinding Foreground}" 
                                  Stretch="Uniform"/>
                        </Grid>
                        <TextBlock x:Name="contentPresenter" Grid.Column="1" 
                                   Text="{TemplateBinding Content}"
                                   Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   Margin="{TemplateBinding Padding}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="10,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="coffePath" Value="{StaticResource Brown500Brush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Fill" TargetName="coffePath" Value="{StaticResource Brown400Brush}"/>
                            <Setter Property="Data" TargetName="coffePath" Value="{Binding Source={StaticResource Coffee}, Path=Data}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="coffePath" Value="{StaticResource Brown200Brush}"/>
                            <Setter Property="Data" TargetName="coffePath" Value="{Binding Source={StaticResource CoffeeOutline}, Path=Data}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Fill" TargetName="coffePath" Value="{StaticResource Brown700Brush}"/>
                            <Setter Property="Data" TargetName="coffePath" Value="{Binding Source={StaticResource CoffeeOff}, Path=Data}"/>
                            <Setter Property="ToolTip" Value="Unset Day Break"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>